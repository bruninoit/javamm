/*
 * Dato un array a di n numeri interi non negativi, l'indice H di a
 * e' definito come il massimo valore h, compreso tra 1 ed n, tale
 * l'h-esimo elemento di a in ordine non crescente sia non inferiore
 * ad h. Ad esempio, l'indice H di 
 * {2, 0, 3, 5, 6, 5, 4, 3, 2, 0, 1, 7, 0, 9}
 * e' 5, in quanto il quinto elemento in ordine non crescente e' 5 
 * (che e' uguale a 5), mentre il sesto elemento in ordine non 
 * crescente e' 4 (che e' minore di 6). Analogamente, l'indice H di 
 * {23, 1, 3, 14, 6, 15, 4, 13, 2, 10, 1, 17, 20, 19}
 * e' 8, in quanto l'ottavo elemento in ordine non crescente e' 10 
 * (che e' maggiore di 8), mentre il nono elemento in ordine non 
 * crescente e' 6 (che e' minore di 9). Infine, l'indice H di un 
 * array di elementi tutti uguali a 0 e', per convenzione, uguale a 0.
 * Scrivere un metodo, chiamato hIndex, che dato in input un
 * array di numeri interi non negativi, restituisce il suo indice H.
 */
void readArray(int[] a) {
	for (int i = 0; i < a.length; i++) {
		System.out.print(a[i] + " ");
	}
}

int[] copyArray(int[] a) {
	int[] b = new int[a.length];
	for (int i = 0; i < a.length; i++) {
		b[i] = a[i];
	}
	return b;
}

int positionMinimum(int[] a) {
	int min = 0;
	for (int i = 0; i < a.length; i++) {
		if (a[i] < a[min]) {
			min = i;
		}
	}
	return min;
}

void orderArrayCrescente(int[] a) {
	int prec = 0;
	for (int i = 0; i < a.length; i++) {
		if (a[i] < prec) {
			int cc = i;
			while (cc - 1 >= 0 && a[cc] < a[cc - 1]) {
				exchangePositions(a, cc, cc - 1);
				cc--;
			}
		}
		prec = a[i];
	}

}

void orderArray(int[] a) {
	int prec = 0;
	for (int i = 0; i < a.length; i++) {
		if (a[i] > prec) {
			int cc = i;
			while (cc - 1 >= 0 && a[cc] > a[cc - 1]) {
				exchangePositions(a, cc, cc - 1);
				cc--;
			}
		}
		prec = a[i];
	}

}

void exchangePositions(int[] a, int j, int k) {
	int temp = a[j];
	a[j] = a[k];
	a[k] = temp;
}

int hIndex(int[] a) {
	int index = -1;
	int[] b = copyArray(a);
	orderArray(b);
	int i = b.length - 1;
	while (i >= 0 && index == -1) {
		if (b[i] > i) {
			index = i + 1;
		}
		i--;
	}
	if (index < 0) {
		index = 0;
	}
	return index;
}

int[] a = {0};
//orderArray(a);
//readArray(a);
System.out.println(hIndex(a));
